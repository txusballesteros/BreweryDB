/*
 * Copyright Txus Ballesteros 2017 (@txusballesteros)
 *
 * This file is part of Foobar.
 *
 * Foobar is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Foobar is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
 *
 * Contact: Txus Ballesteros <txus.ballesteros@gmail.com>
 */
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

def globalConfiguration = rootProject.extensions.getByName("ext")

android {
  Properties localProperties = new Properties()
  localProperties.load(project.rootProject.file('local.properties').newDataInputStream())
  compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
  buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

  defaultConfig {
    applicationId globalConfiguration.getAt("androidApplicationId")
    minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
    targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")
    versionCode globalConfiguration.getAt("androidVersionCode")
    versionName globalConfiguration.getAt("androidVersionName")

    vectorDrawables.useSupportLibrary true
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    buildConfigField 'String', 'API_KEY', localProperties.getProperty('API_KEY')
  }

  sourceSets {
    main.java.srcDirs += "src/main/kotlin"
    test.java.srcDirs += "src/testing/unitaries/kotlin"
    androidTest.java.srcDirs += "src/testing/instrumentation/api/kotlin"
    androidTest.java.srcDirs += "src/testing/instrumentation/aceptance/kotlin"
  }

  testOptions {
    unitTests.returnDefaultValues = true
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_7
    targetCompatibility JavaVersion.VERSION_1_7
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

  lintOptions {
    disable 'InvalidPackage'
  }
}

dependencies {
  def dependencies = globalConfiguration.mobileDependencies
  compile dependencies.AppCompat
  compile dependencies.RecyclerView
  compile dependencies.CardView
  compile dependencies.Design
  compile dependencies.LoadingBalls
  compile dependencies.ConstraintLayout
  compile dependencies.KotlinStd
  compile dependencies.AnkoCommon
  compile dependencies.AnkoAppCompat
  compile dependencies.AnkoRecyclerView
  compile dependencies.AnkoCardView
  compile dependencies.AnkoDesign
  compile dependencies.Stetho
  compile dependencies.StethoOkHttp
  compile dependencies.Retrofit
  compile dependencies.Gson
  compile dependencies.GsonConverter
  compile dependencies.Picasso
  compile dependencies.Dagger
  debugCompile dependencies.LeakCanaryForDebug
  releaseCompile dependencies.LeakCanaryForRelease
  kapt dependencies.DaggerCompiler

  testCompile dependencies.JUnit
  testCompile dependencies.Mockito
  testCompile dependencies.MockitoKotlin
  testCompile dependencies.LeakCanaryForTest

  androidTestCompile dependencies.Stetho
  androidTestCompile dependencies.StethoOkHttp
  androidTestCompile dependencies.JUnit
  androidTestCompile dependencies.Mockito
  androidTestCompile dependencies.SupportAnnotation
  androidTestCompile dependencies.TestRunner
  androidTestCompile dependencies.TestRules
  androidTestCompile dependencies.EspressoCore
  androidTestCompile dependencies.Retrofit
  androidTestCompile dependencies.Gson
  androidTestCompile dependencies.GsonConverter
  androidTestCompile dependencies.Dagger
  kaptAndroidTest dependencies.DaggerCompiler
}

repositories {
  maven {
    url "http://dl.bintray.com/glomadrian/maven"
  }
}

kapt {
  generateStubs = true
}